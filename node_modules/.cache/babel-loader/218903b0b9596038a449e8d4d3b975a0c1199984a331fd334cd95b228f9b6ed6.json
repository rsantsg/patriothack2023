{"ast":null,"code":"var _jsxFileName = \"/Users/ron/Documents/developer/patriothack/src/components/LayoutFlow.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, isNode } from 'react-flow-renderer';\nimport dagre from 'dagre';\nimport initialElements from './initial-elements';\nimport './layouting.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dagreGraph = new dagre.graphlib.Graph();\ndagreGraph.setDefaultEdgeLabel(() => ({}));\n\n// In order to keep this example simple the node width and height are hardcoded.\n// In a real world app you would use the correct width and height values of\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\n\nconst nodeWidth = 172;\nconst nodeHeight = 36;\nconst getLayoutedElements = (elements, direction = 'TB') => {\n  const isHorizontal = direction === 'LR';\n  dagreGraph.setGraph({\n    rankdir: direction\n  });\n  elements.forEach(el => {\n    if (isNode(el)) {\n      dagreGraph.setNode(el.id, {\n        width: nodeWidth,\n        height: nodeHeight\n      });\n    } else {\n      dagreGraph.setEdge(el.source, el.target);\n    }\n  });\n  dagre.layout(dagreGraph);\n  return elements.map(el => {\n    if (isNode(el)) {\n      const nodeWithPosition = dagreGraph.node(el.id);\n      el.targetPosition = isHorizontal ? 'left' : 'top';\n      el.sourcePosition = isHorizontal ? 'right' : 'bottom';\n\n      // unfortunately we need this little hack to pass a slightly different position\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n      el.position = {\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\n        y: nodeWithPosition.y - nodeHeight / 2\n      };\n    }\n    return el;\n  });\n};\nconst layoutedElements = getLayoutedElements(initialElements);\nconst LayoutFlow = () => {\n  _s();\n  const [elements, setElements] = useState(layoutedElements);\n  const onConnect = params => setElements(els => addEdge({\n    ...params,\n    type: 'smoothstep',\n    animated: true\n  }, els));\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n  const onLayout = useCallback(direction => {\n    const layoutedElements = getLayoutedElements(elements, direction);\n    setElements(layoutedElements);\n  }, [elements]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layoutflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onConnect: onConnect,\n        onElementsRemove: onElementsRemove,\n        connectionLineType: \"smoothstep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onLayout('TB'),\n          children: \"vertical layout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onLayout('LR'),\n          children: \"horizontal layout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutFlow, \"yglGtvThLzy2ZaJtjKP99rUPgJ8=\");\n_c = LayoutFlow;\nexport default LayoutFlow;\nvar _c;\n$RefreshReg$(_c, \"LayoutFlow\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","ReactFlowProvider","addEdge","removeElements","isNode","dagre","initialElements","jsxDEV","_jsxDEV","dagreGraph","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","nodeHeight","getLayoutedElements","elements","direction","isHorizontal","setGraph","rankdir","forEach","el","setNode","id","width","height","setEdge","source","target","layout","map","nodeWithPosition","node","targetPosition","sourcePosition","position","x","Math","random","y","layoutedElements","LayoutFlow","_s","setElements","onConnect","params","els","type","animated","onElementsRemove","elementsToRemove","onLayout","className","children","connectionLineType","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ron/Documents/developer/patriothack/src/components/LayoutFlow.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  isNode,\n} from 'react-flow-renderer';\nimport dagre from 'dagre';\n\nimport initialElements from './initial-elements';\n\nimport './layouting.css';\n\nconst dagreGraph = new dagre.graphlib.Graph();\ndagreGraph.setDefaultEdgeLabel(() => ({}));\n\n// In order to keep this example simple the node width and height are hardcoded.\n// In a real world app you would use the correct width and height values of\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\n\nconst nodeWidth = 172;\nconst nodeHeight = 36;\n\nconst getLayoutedElements = (elements, direction = 'TB') => {\n  const isHorizontal = direction === 'LR';\n  dagreGraph.setGraph({ rankdir: direction });\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\n    } else {\n      dagreGraph.setEdge(el.source, el.target);\n    }\n  });\n\n  dagre.layout(dagreGraph);\n\n  return elements.map((el) => {\n    if (isNode(el)) {\n      const nodeWithPosition = dagreGraph.node(el.id);\n      el.targetPosition = isHorizontal ? 'left' : 'top';\n      el.sourcePosition = isHorizontal ? 'right' : 'bottom';\n\n      // unfortunately we need this little hack to pass a slightly different position\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n      el.position = {\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\n        y: nodeWithPosition.y - nodeHeight / 2,\n      };\n    }\n\n    return el;\n  });\n};\n\nconst layoutedElements = getLayoutedElements(initialElements);\n\nconst LayoutFlow = () => {\n  const [elements, setElements] = useState(layoutedElements);\n  const onConnect = (params) =>\n    setElements((els) =>\n      addEdge({ ...params, type: 'smoothstep', animated: true }, els)\n    );\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n\n  const onLayout = useCallback(\n    (direction) => {\n      const layoutedElements = getLayoutedElements(elements, direction);\n      setElements(layoutedElements);\n    },\n    [elements]\n  );\n\n  return (\n    <div className=\"layoutflow\">\n      <ReactFlowProvider>\n        <ReactFlow\n          elements={elements}\n          onConnect={onConnect}\n          onElementsRemove={onElementsRemove}\n          connectionLineType=\"smoothstep\"\n        />\n        <div className=\"controls\">\n          <button onClick={() => onLayout('TB')}>vertical layout</button>\n          <button onClick={() => onLayout('LR')}>horizontal layout</button>\n        </div>\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default LayoutFlow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}