{"ast":null,"code":"let util = require(\"../util\");\nmodule.exports = sort;\nfunction sort(entries, biasRight) {\n  let parts = util.partition(entries, entry => {\n    return entry.hasOwnProperty(\"barycenter\");\n  });\n  let sortable = parts.lhs,\n    unsortable = parts.rhs.sort((a, b) => b.i - a.i),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n  sortable.sort(compareWithBias(!!biasRight));\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  sortable.forEach(entry => {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n  let result = {\n    vs: vs.flat(true)\n  };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\nfunction consumeUnsortable(vs, unsortable, index) {\n  let last;\n  while (unsortable.length && (last = unsortable[unsortable.length - 1]).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\nfunction compareWithBias(bias) {\n  return (entryV, entryW) => {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}","map":{"version":3,"names":["util","require","module","exports","sort","entries","biasRight","parts","partition","entry","hasOwnProperty","sortable","lhs","unsortable","rhs","a","b","i","vs","sum","weight","vsIndex","compareWithBias","consumeUnsortable","forEach","length","push","barycenter","result","flat","index","last","pop","bias","entryV","entryW"],"sources":["/Users/ron/Documents/developer/patriothack/node_modules/@dagrejs/dagre/lib/order/sort.js"],"sourcesContent":["let util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  let parts = util.partition(entries, entry => {\n    return entry.hasOwnProperty(\"barycenter\");\n  });\n  let sortable = parts.lhs,\n    unsortable = parts.rhs.sort((a, b) => b.i - a.i),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  sortable.forEach(entry => {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  let result = { vs: vs.flat(true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  let last;\n  while (unsortable.length && (last = unsortable[unsortable.length - 1]).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return (entryV, entryW) => {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE7BC,MAAM,CAACC,OAAO,GAAGC,IAAI;AAErB,SAASA,IAAIA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAChC,IAAIC,KAAK,GAAGP,IAAI,CAACQ,SAAS,CAACH,OAAO,EAAEI,KAAK,IAAI;IAC3C,OAAOA,KAAK,CAACC,cAAc,CAAC,YAAY,CAAC;EAC3C,CAAC,CAAC;EACF,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,GAAG;IACtBC,UAAU,GAAGN,KAAK,CAACO,GAAG,CAACV,IAAI,CAAC,CAACW,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC;IAChDC,EAAE,GAAG,EAAE;IACPC,GAAG,GAAG,CAAC;IACPC,MAAM,GAAG,CAAC;IACVC,OAAO,GAAG,CAAC;EAEbV,QAAQ,CAACP,IAAI,CAACkB,eAAe,CAAC,CAAC,CAAChB,SAAS,CAAC,CAAC;EAE3Ce,OAAO,GAAGE,iBAAiB,CAACL,EAAE,EAAEL,UAAU,EAAEQ,OAAO,CAAC;EAEpDV,QAAQ,CAACa,OAAO,CAACf,KAAK,IAAI;IACxBY,OAAO,IAAIZ,KAAK,CAACS,EAAE,CAACO,MAAM;IAC1BP,EAAE,CAACQ,IAAI,CAACjB,KAAK,CAACS,EAAE,CAAC;IACjBC,GAAG,IAAIV,KAAK,CAACkB,UAAU,GAAGlB,KAAK,CAACW,MAAM;IACtCA,MAAM,IAAIX,KAAK,CAACW,MAAM;IACtBC,OAAO,GAAGE,iBAAiB,CAACL,EAAE,EAAEL,UAAU,EAAEQ,OAAO,CAAC;EACtD,CAAC,CAAC;EAEF,IAAIO,MAAM,GAAG;IAAEV,EAAE,EAAEA,EAAE,CAACW,IAAI,CAAC,IAAI;EAAE,CAAC;EAClC,IAAIT,MAAM,EAAE;IACVQ,MAAM,CAACD,UAAU,GAAGR,GAAG,GAAGC,MAAM;IAChCQ,MAAM,CAACR,MAAM,GAAGA,MAAM;EACxB;EACA,OAAOQ,MAAM;AACf;AAEA,SAASL,iBAAiBA,CAACL,EAAE,EAAEL,UAAU,EAAEiB,KAAK,EAAE;EAChD,IAAIC,IAAI;EACR,OAAOlB,UAAU,CAACY,MAAM,IAAI,CAACM,IAAI,GAAGlB,UAAU,CAACA,UAAU,CAACY,MAAM,GAAG,CAAC,CAAC,EAAER,CAAC,IAAIa,KAAK,EAAE;IACjFjB,UAAU,CAACmB,GAAG,CAAC,CAAC;IAChBd,EAAE,CAACQ,IAAI,CAACK,IAAI,CAACb,EAAE,CAAC;IAChBY,KAAK,EAAE;EACT;EACA,OAAOA,KAAK;AACd;AAEA,SAASR,eAAeA,CAACW,IAAI,EAAE;EAC7B,OAAO,CAACC,MAAM,EAAEC,MAAM,KAAK;IACzB,IAAID,MAAM,CAACP,UAAU,GAAGQ,MAAM,CAACR,UAAU,EAAE;MACzC,OAAO,CAAC,CAAC;IACX,CAAC,MAAM,IAAIO,MAAM,CAACP,UAAU,GAAGQ,MAAM,CAACR,UAAU,EAAE;MAChD,OAAO,CAAC;IACV;IAEA,OAAO,CAACM,IAAI,GAAGC,MAAM,CAACjB,CAAC,GAAGkB,MAAM,CAAClB,CAAC,GAAGkB,MAAM,CAAClB,CAAC,GAAGiB,MAAM,CAACjB,CAAC;EAC1D,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}