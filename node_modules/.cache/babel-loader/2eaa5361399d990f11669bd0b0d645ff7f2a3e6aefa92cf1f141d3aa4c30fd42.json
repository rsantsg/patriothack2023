{"ast":null,"code":"var _jsxFileName = \"/Users/ron/Documents/developer/patriothack/src/component/Flow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, MiniMap, Controls } from 'reactflow';\nimport 'reactflow/dist/base.css';\nimport './tailwind-config.js';\nimport CustomNode from './CustomNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst initNodes = [{\n  id: '1',\n  type: 'custom',\n  data: {\n    name: 'Jane Doe',\n    job: 'CEO',\n    emoji: 'ðŸ˜Ž'\n  },\n  position: {\n    x: 0,\n    y: 50\n  }\n}, {\n  id: '2',\n  type: 'custom',\n  data: {\n    name: 'Tyler Weary',\n    job: 'Designer',\n    emoji: 'ðŸ¤“'\n  },\n  position: {\n    x: -200,\n    y: 200\n  }\n}, {\n  id: '3',\n  type: 'custom',\n  data: {\n    name: 'Kristi Price',\n    job: 'Developer',\n    emoji: 'ðŸ¤©'\n  },\n  position: {\n    x: 200,\n    y: 200\n  }\n}];\nconst initEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3'\n}];\nconst Flow = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    className: \"bg-teal-50\",\n    children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Flow, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["React","useCallback","ReactFlow","useNodesState","useEdgesState","addEdge","MiniMap","Controls","CustomNode","jsxDEV","_jsxDEV","nodeTypes","custom","initNodes","id","type","data","name","job","emoji","position","x","y","initEdges","source","target","Flow","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","fitView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ron/Documents/developer/patriothack/src/component/Flow.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, MiniMap, Controls } from 'reactflow';\n\nimport 'reactflow/dist/base.css';\n\nimport './tailwind-config.js';\nimport CustomNode from './CustomNode';\n\nconst nodeTypes = {\n  custom: CustomNode,\n};\n\nconst initNodes = [\n  {\n    id: '1',\n    type: 'custom',\n    data: { name: 'Jane Doe', job: 'CEO', emoji: 'ðŸ˜Ž' },\n    position: { x: 0, y: 50 },\n  },\n  {\n    id: '2',\n    type: 'custom',\n    data: { name: 'Tyler Weary', job: 'Designer', emoji: 'ðŸ¤“' },\n\n    position: { x: -200, y: 200 },\n  },\n  {\n    id: '3',\n    type: 'custom',\n    data: { name: 'Kristi Price', job: 'Developer', emoji: 'ðŸ¤©' },\n    position: { x: 200, y: 200 },\n  },\n];\n\nconst initEdges = [\n  {\n    id: 'e1-2',\n    source: '1',\n    target: '2',\n  },\n  {\n    id: 'e1-3',\n    source: '1',\n    target: '3',\n  },\n];\n\nconst Flow = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initEdges);\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\n\n  return (\n    <ReactFlow\n      nodes={nodes}\n      edges={edges}\n      onNodesChange={onNodesChange}\n      onEdgesChange={onEdgesChange}\n      onConnect={onConnect}\n      nodeTypes={nodeTypes}\n      fitView\n      className=\"bg-teal-50\"\n    >\n      <MiniMap />\n      <Controls />\n    </ReactFlow>\n  );\n};\n\nexport default Flow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,IAAIC,aAAa,EAAEC,aAAa,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,WAAW;AAE/F,OAAO,yBAAyB;AAEhC,OAAO,sBAAsB;AAC7B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEJ;AACV,CAAC;AAED,MAAMK,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;IAAEC,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAK,CAAC;EACnDC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAG;AAC1B,CAAC,EACD;EACER,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;IAAEC,IAAI,EAAE,aAAa;IAAEC,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAK,CAAC;EAE3DC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAC,GAAG;IAAEC,CAAC,EAAE;EAAI;AAC9B,CAAC,EACD;EACER,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;IAAEC,IAAI,EAAE,cAAc;IAAEC,GAAG,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAK,CAAC;EAC7DC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAC7B,CAAC,CACF;AAED,MAAMC,SAAS,GAAG,CAChB;EACET,EAAE,EAAE,MAAM;EACVU,MAAM,EAAE,GAAG;EACXC,MAAM,EAAE;AACV,CAAC,EACD;EACEX,EAAE,EAAE,MAAM;EACVU,MAAM,EAAE,GAAG;EACXC,MAAM,EAAE;AACV,CAAC,CACF;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG3B,aAAa,CAACU,SAAS,CAAC;EACjE,MAAM,CAACkB,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG7B,aAAa,CAACmB,SAAS,CAAC;EAEjE,MAAMW,SAAS,GAAGjC,WAAW,CAAEkC,MAAM,IAAKH,QAAQ,CAAEI,GAAG,IAAK/B,OAAO,CAAC8B,MAAM,EAAEC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;EAEtF,oBACE1B,OAAA,CAACR,SAAS;IACR0B,KAAK,EAAEA,KAAM;IACbG,KAAK,EAAEA,KAAM;IACbD,aAAa,EAAEA,aAAc;IAC7BG,aAAa,EAAEA,aAAc;IAC7BC,SAAS,EAAEA,SAAU;IACrBvB,SAAS,EAAEA,SAAU;IACrB0B,OAAO;IACPC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAEtB7B,OAAA,CAACJ,OAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXjC,OAAA,CAACH,QAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAAChB,EAAA,CArBID,IAAI;EAAA,QACiCvB,aAAa,EACbC,aAAa;AAAA;AAAAwC,EAAA,GAFlDlB,IAAI;AAuBV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}